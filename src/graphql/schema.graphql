scalar DateTime

#type Subscription {
#}

type Query {
  userData(username: String!): UserDataResponse!
}

type Mutation {
	signIn(username: String!, password: String!): SignInResponse!
	signUp(username: String!, password: String!, birthDate: String!): WithStatus!
	signOut: SignOutResponse!

  editProfile(username: String!, birthDate: String, firstName: String, lastName: String, countryCode: String, countryLabel: String, city: String, avatar: String): WithStatus!
}

type UserDataResponse {
  status: Status!
  result: UserData
}

type UserData{
  username: String!
  signingUpDate: String
  birthDate: String!
  firstName: String
  lastName: String
  countryCode: String
  countryLabel: String
  city: String
  avatar: String
}

type WithStatus {
  status: Status!
}

type SignOutResponse {
  sessionToken: String!
}

type SignInResponse {
  status: Status!
  sessionToken: String
}

type Status {
	ok: Boolean!
	message: String!
}

